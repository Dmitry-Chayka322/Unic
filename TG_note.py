import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from NoteManager import NoteManager

note_manager = NoteManager()

TOKEN = "7715793570:AAEc889N_ob50unTZVEp18476bKK6MzhDzw"
bot = telebot.TeleBot(TOKEN)


def main_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.add(KeyboardButton("üìù –ó–∞–º–µ—Ç–∫–∏"))
    return markup


def notes_menu(has_notes):
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    markup.add(KeyboardButton("‚úèÔ∏è –î–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É"))

    if has_notes:
        markup.add(KeyboardButton("üìÑ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏"))
        markup.add(KeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏"))
        markup.add(KeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫–∏ –ø–æ –∏–Ω–¥–µ–∫—Å–∞–º"))

    markup.add(KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
    return markup


@bot.message_handler(commands=["start"])
def start(message):
    bot.send_message(
        message.chat.id,
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–º–µ—Ç–æ–∫! –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        reply_markup=main_menu()
    )


@bot.message_handler(func=lambda msg: msg.text == "üìù –ó–∞–º–µ—Ç–∫–∏")
def open_notes_menu(message):
    has_notes = len(note_manager.get_notes()) > 0
    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –∑–∞–º–µ—Ç–∫–∞–º–∏:",
        reply_markup=notes_menu(has_notes)
    )


@bot.message_handler(func=lambda msg: msg.text == "‚úèÔ∏è –î–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É")
def add_note_prompt(message):
    msg = bot.send_message(
        message.chat.id,
        "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–º–µ—Ç–∫–∏:"
    )
    bot.register_next_step_handler(msg, add_note)


def add_note(message):
    note_manager.create_note(message.text)
    bot.send_message(
        message.chat.id,
        "‚úÖ –ó–∞–º–µ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!",
        reply_markup=notes_menu(has_notes=True)
    )


@bot.message_handler(func=lambda msg: msg.text == "üìÑ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏")
def show_notes(message):
    notes = note_manager.get_notes()
    if not notes:
        bot.send_message(message.chat.id, "‚ùó –ó–∞–º–µ—Ç–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç.")
    else:
        response = "\n\n".join(
            [f"#{idx} - {note['text']} (–≤—Ä–µ–º—è: {note['timestamp']})"
             for idx, note in enumerate(notes)]
        )
        bot.send_message(message.chat.id, response)


@bot.message_handler(func=lambda msg: msg.text == "‚ùå –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏")
def delete_all_notes(message):
    note_manager.delete_all_notes()
    bot.send_message(
        message.chat.id,
        "üóëÔ∏è –í—Å–µ –∑–∞–º–µ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω—ã.",
        reply_markup=notes_menu(has_notes=False)
    )


@bot.message_handler(func=lambda msg: msg.text == "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫–∏ –ø–æ –∏–Ω–¥–µ–∫—Å–∞–º")
def delete_notes_prompt(message):
    msg = bot.send_message(
        message.chat.id,
        "–í–≤–µ–¥–∏—Ç–µ –∏–Ω–¥–µ–∫—Å—ã –∑–∞–º–µ—Ç–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: 0,2,4):"
    )
    bot.register_next_step_handler(msg, delete_notes_by_indices)


def delete_notes_by_indices(message):
    try:
        indices = list(map(int, message.text.split(",")))
        success = note_manager.delete_notes_by_indices(indices)
        has_notes = len(note_manager.get_notes()) > 0
        if success:
            bot.send_message(
                message.chat.id,
                "‚úÖ –£–∫–∞–∑–∞–Ω–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω—ã.",
                reply_markup=notes_menu(has_notes)
            )
        else:
            bot.send_message(
                message.chat.id,
                "‚ö†Ô∏è –û—à–∏–±–∫–∞: –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω–¥–µ–∫—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                reply_markup=notes_menu(has_notes)
            )
    except ValueError:
        bot.send_message(
            message.chat.id,
            "‚ö†Ô∏è –û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∏–Ω–¥–µ–∫—Å—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 0,2,4).",
            reply_markup=notes_menu(has_notes=True)
        )


@bot.message_handler(func=lambda msg: msg.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
def back_to_main_menu(message):
    bot.send_message(
        message.chat.id,
        "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        reply_markup=main_menu()
    )


if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.infinity_polling()
